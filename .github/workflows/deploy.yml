name: Build and Deploy to Netlify and Vercel

on:
  workflow_dispatch:
    inputs: 
        deploy-netlify:
          description: 'Deploy to Netlify'
          required: false
          default: true
          type: boolean
        deploy-vercel:
          description: 'Deploy to Vercel'
          required: false
          default: true
          type: boolean
jobs:
  deploy:
    runs-on: macos-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install deps
        run: npm ci
      
      - name: Run tests
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        if: ${{ inputs.deploy-netlify }}
        with:
            publish-dir: './dist'
            production-branch: 'master'
            github-token: ${{ secrets.GITHUB_TOKEN }}
            deploy-message: 'Deploy from GitHub Actions'
            
      - name: Install Vercel CLI
        if: ${{ inputs.deploy-netlify }}
        run: npm install --global vercel@canary
        
      - name: Pull Vercel Environment Information
        if: ${{ inputs.deploy-netlify }}
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        if: ${{ inputs.deploy-netlify }}
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        if: ${{ inputs.deploy-netlify }}
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}